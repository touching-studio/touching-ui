/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonVariant } from "./components/touching-button/touching-button";
export namespace Components {
    interface TouchingButton {
        /**
          * The flag of disabling the button. Default to `false`.
         */
        "disabled": boolean;
        /**
          * If presents, the button would act like an `a` tag using the given `href`.
         */
        "href"?: string;
        /**
          * Variant of the button. Default to `solid`.
         */
        "variant": ButtonVariant;
    }
}
declare global {
    interface HTMLTouchingButtonElement extends Components.TouchingButton, HTMLStencilElement {
    }
    var HTMLTouchingButtonElement: {
        prototype: HTMLTouchingButtonElement;
        new (): HTMLTouchingButtonElement;
    };
    interface HTMLElementTagNameMap {
        "touching-button": HTMLTouchingButtonElement;
    }
}
declare namespace LocalJSX {
    interface TouchingButton {
        /**
          * The flag of disabling the button. Default to `false`.
         */
        "disabled"?: boolean;
        /**
          * If presents, the button would act like an `a` tag using the given `href`.
         */
        "href"?: string;
        /**
          * Variant of the button. Default to `solid`.
         */
        "variant"?: ButtonVariant;
    }
    interface IntrinsicElements {
        "touching-button": TouchingButton;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "touching-button": LocalJSX.TouchingButton & JSXBase.HTMLAttributes<HTMLTouchingButtonElement>;
        }
    }
}
